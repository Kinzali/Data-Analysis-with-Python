import unittest
import pandas as pd
import plotly.graph_objects as go

class TestPlotting(unittest.TestCase):

    def test_box_plot(self):
        """
        This test ensures that the box plot is properly generated by checking that
        the figure object contains the expected number of data traces and has a title,
        x-axis title, and y-axis title. You can add more tests to cover other aspects
        of the code, such as data input and preprocessing,
        or to verify that the plot looks correct.
        """
        data = pd.read_csv("/sample_data.csv")
        fig = go.Figure()
        for sector in data["Product"].unique():
            fig.add_trace(go.Box(
                x=data.loc[data["Product"] == sector]["Product"],
                y=data.loc[data["Product"] == sector]["Revenue"],
                name=sector
            ))
        fig.update_layout(
            title="Revenue by Product",
            xaxis_title="Product",
            yaxis_title="Revenue"
        )
        self.assertIsNotNone(fig.data, "No data found in figure.")
        self.assertEqual(len(fig.data), len(data["Product"].unique()), 
                         "Number of boxes in the plot does not match the number of unique products in the data.")
        self.assertIsNotNone(fig.layout.title, "No title found in figure layout.")
        self.assertIsNotNone(fig.layout.xaxis.title, "No x-axis title found in figure layout.")
        self.assertIsNotNone(fig.layout.yaxis.title, "No y-axis title found in figure layout.")
        
if __name__ == '__main__':
    unittest.main()
